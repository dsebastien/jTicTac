<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>net.dsebastien.jtictac</groupId>
    <artifactId>jTicTac</artifactId>
    <version>1.0</version>
    <name>jTicTac</name>

    <description>Time is running out.</description>

    <packaging>jar</packaging>

    <!-- License to use (GPL, LGPL, Apache, ...) -->
    <licenses>
        <license>
            <name>GNU General Public License</name>
            <url>http://www.gnu.org/licenses/gpl-3.0.txt</url>
            <distribution>manual</distribution>
            <comments>v3 or later</comments>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>dSebastien</id>
            <name>Dubois Sebastien</name>
            <url>http://www.dsebastien.net</url>
            <timezone>+1</timezone>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
    </developers>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/dsebastien/jTicTac/issues</url>
    </issueManagement>

    <scm>
        <url>git@github.com:dsebastien/jTicTac.git</url>
        <connection>scm:git:git@github.com:dsebastien/jTicTac.git</connection>
        <developerConnection>scm:git:git@github.com:dsebastien/jTicTac.git</developerConnection>
    </scm>
	
	<properties>
        <!-- Java -->
        <version.java>1.6</version.java>

        <!-- JavaFx -->
        <version.javafx>2.0</version.javafx>

        <!-- Joda Time -->
        <version.jodatime>2.1</version.jodatime>

        <!-- Apache Commons -->
        <version.commons-lang>3.1</version.commons-lang>
        <version.commons-configuration>1.8</version.commons-configuration>
        <version.commons-io>2.2</version.commons-io>
        <version.commons-codec>1.6</version.commons-codec>
        <!--
        <version.commons-beanutils>1.7.0</version.commons-beanutils>
        <version.commons-collections>3.2</version.commons-collections>
        -->

        <!-- Logging -->
        <version.log4j>1.2.16</version.log4j>
        <version.slf4j>1.6.4</version.slf4j>

        <!-- Guava -->
        <version.guava>11.0.2</version.guava>

        <!-- Tests -->
        <version.junit>4.10</version.junit>
        <!--
        <version.unitils>3.1</version.unitils>
        -->
        <version.mockito>1.9.0</version.mockito>
        <version.hamcrest>1.1</version.hamcrest>
        <version.objenesis>1.2</version.objenesis>

        <!-- Reporting plugins -->
        <version.cobertura>2.5.1</version.cobertura>

        <!-- Misc -->
        <version.mavencompiler>2.3.2</version.mavencompiler>
        <version.surefire>2.12</version.surefire>
        <version.pmd>2.7.1</version.pmd>
        <version.jxr>2.1</version.jxr>
        <version.taglist>2.4</version.taglist>
    </properties>

    <build>
		<finalName>${project.name}-${project.version}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.mavencompiler}</version>
                <configuration>
                    <target>${version.java}</target>
                    <source>${version.java}</source>
                    <encoding>UTF-8</encoding><!-- try to force encoding -->
                    <optimize>true</optimize>
                    <showWarnings>true</showWarnings>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${version.surefire}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
			<!--
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
				<version>2.3</version>
                <executions>
                    <execution>
                        <id>install</id>
                        <phase>install</phase>
                        <goals>
                            <goal>sources</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
			-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-idea-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <jdkLevel>${version.java}</jdkLevel>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>
			<!-- Copies the JavaFX 2 binary libraries (in my case the .dll files). This should be temporary.. -->
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.3</version>
                <executions>
					<execution>
						<id>unpack-javafx-binlib</id>
						<phase>validate</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
 
						<configuration>
							<outputDirectory>${project.build.directory}/build/bin</outputDirectory>
							<markersDirectory>${project.build.directory}/build/bin-markers</markersDirectory>
							<includeArtifactIds>javafx-bin-x64</includeArtifactIds>
							<overWriteReleases>false</overWriteReleases>
						</configuration>
					</execution>
                </executions>
            </plugin>
			<!-- Creates the executable jar file -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<outputDirectory>${project.build.directory}/build</outputDirectory>
					<archive>
						<manifestEntries>
                            <JavaFX-Version>2.0</JavaFX-Version>
                            <Main-Class>net.dsebastien.jtictac.JTicTac</Main-Class>
                            <implementation-vendor>dSebastien</implementation-vendor>
                            <implementation-title>${project.name}</implementation-title>
                            <implementation-version>1.0</implementation-version>
                            <JavaFX-Application-Class>net.dsebastien.jtictac.JTicTac</JavaFX-Application-Class>
                            <JavaFX-Class-Path></JavaFX-Class-Path>
                        </manifestEntries>
					</archive>
					<!-- we could have used the standard descriptor, but the problem is that we want the jar to be clean and we need to modify the exclusion list
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					-->
					<descriptors>
						<descriptor>src/main/assembly/jar.xml</descriptor> <!-- skips Java FX bin libs -->
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- we also copy the files we need in the distribution -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/build</outputDirectory>
							<resources>          
								<resource>
									<directory>${basedir}</directory>
									<filtering>true</filtering>
									<includes>
										<include>config.properties</include>
										<include>data.xml</include>
										<include>run.bat</include>
										<include>CONTRIBUTORS</include>
										<include>LICENSE</include>
										<include>README.MD</include>
									</includes>
								</resource>
							</resources>              
						</configuration>            
					</execution>
				</executions>
			</plugin>
        </plugins>

        <resources>
            <resource>
                <filtering>false</filtering>
                <directory>${basedir}/src/main/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
            </resource>
        </resources>
    </build>

    <dependencies>
        <!-- Java Fx -->
		<!-- Created manually -->
        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>javafx</artifactId>
            <version>2.0</version>
            <scope>compile</scope>
        </dependency>
		
		<!-- 
			Created manually (jar with all dlls at the root) 
			Solution explained here: https://forums.oracle.com/forums/thread.jspa?threadID=2307062
		-->
		<dependency>
            <groupId>com.oracle</groupId>
            <artifactId>javafx-bin-x64</artifactId>
            <version>2.0</version>
            <scope>compile</scope>
        </dependency>

        <!-- Joda Time -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${version.jodatime}</version>
        </dependency>

        <!-- Apache Commons -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${version.commons-lang}</version>
        </dependency>
        <dependency>
            <groupId>commons-configuration</groupId>
            <artifactId>commons-configuration</artifactId>
            <version>${version.commons-configuration}</version>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${version.slf4j}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${version.slf4j}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${version.slf4j}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${version.log4j}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.mail</groupId>
                    <artifactId>mail</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.jms</groupId>
                    <artifactId>jms</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jdmk</groupId>
                    <artifactId>jmxtools</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jmx</groupId>
                    <artifactId>jmxri</artifactId>
                </exclusion>
            </exclusions>
            <scope>runtime</scope>
        </dependency>

        <!-- Tests -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.junit}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${version.mockito}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>${version.hamcrest}</version>
            <scope>test</scope>
        </dependency>
        <!-- required by mockito -->
        <dependency>
            <groupId>org.objenesis</groupId>
            <artifactId>objenesis</artifactId>
            <version>${version.objenesis}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>